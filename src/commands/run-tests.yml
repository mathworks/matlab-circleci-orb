description: >
  Run MATLAB and Simulink tests and generate artifacts. By default, the command includes any files
  in your project that have a `Test` label. If your pipeline does not use a MATLAB project, or if
  it uses a MATLAB release before R2019a, then the command includes all tests in the root of your
  repository and in any of its subfolders. The command fails if any of the included tests fails.

parameters:
  source-folder:
    description: >
      Location of the folder containing source code, relative to the project root folder. The
      specified folder and its subfolders are added to the top of the MATLAB search path. If
      you specify `source-folder` and then generate a coverage report, MATLAB uses only the source
      code in the specified folder and its subfolders to generate the report. You can specify multiple
      folders using a colon-separated or semicolon-separated list.
    type: string
    default: ''
  select-by-folder:
    description: >
      Location of the folder used to select test suite elements, relative to the project root folder.
      To create a test suite, MATLAB uses only the tests in the specified folder and its subfolders.
      You can specify multiple folders using a colon-separated or semicolon-separated list.
    type: string
    default: ''
  select-by-tag:
    description: >
      Test tag used to select test suite elements. To create a test suite, MATLAB uses only the test elements
      with the specified tag.
    type: string
    default: ''
  strict:
    description: >
      Option to apply strict checks when running tests, specified as `false` or `true`. If you specify
      a value of `true`, the command generates a qualification failure whenever a test issues a warning.
    type: boolean
    default: false
  use-parallel:
    description: >
      Option to run tests in parallel, specified as `false` or `true`. If the test runner configuration
      is suited for parallelization, you can specify a value of `true` to run tests in parallel. This
      parameter requires a Parallel Computing Toolbox license.
    type: boolean
    default: false
  output-detail:
    description: >
      Amount of event detail displayed for the test run, specified as `none`, `terse`, `concise`, `detailed`,
      or `verbose`. By default, the command displays failing and logged events at the `detailed` level and test
      run progress at the `concise` level.
    type: string
    default: ''
  logging-level:
    description: >
      Maximum verbosity level for logged diagnostics included for the test run, specified as `none`, `terse`,
      `concise`, `detailed`, or `verbose`. By default, the command includes diagnostics logged at the `terse` level.
    type: string
    default: ''
  test-results-pdf:
    description: >
      Path to write the test results in PDF format. On macOS platforms, this parameter is supported in MATLAB R2020b and later.
    type: string
    default: ''
  test-results-junit:
    description: >
      Path to write the test results in JUnit-style XML format.
    type: string
    default: ''
  test-results-simulink-test:
    description: >
      Path to export Simulink Test Manager results in MLDATX format. This parameter requires a Simulink Test license, and
      is supported in MATLAB R2019a and later.
    type: string
    default: ''
  test-results-html:
    description: >
      Path to write the test results in HTML format.
    type: string
    default: ''
  code-coverage-cobertura:
    description: >
      Path to write the code coverage results in Cobertura XML format.
    type: string
    default: ''
  code-coverage-html:
    description: >
      Path to write the code coverage results in HTML format.
    type: string
    default: ''
  model-coverage-cobertura:
    description: >
      Path to write the model coverage results in Cobertura XML format. This parameter requires a Simulink Coverage license,
      and is supported in MATLAB R2018b and later.
    type: string
    default: ''
  model-coverage-html:
    description: >
      Path to write the model coverage results in HTML format. This parameter requires a Simulink Coverage license, and is
      supported in MATLAB R2018b and later.
    type: string
    default: ''
  no-output-timeout:
    description: >
      Elapsed time the tests can run without output. The string is a decimal with unit suffix,
      such as “20m”, “1.25h”, “5s”. The default is 10 minutes and the maximum is governed by the
      maximum time a job is allowed to run.
    type: string
    default: 10m
  startup-options:
    description: >
      MATLAB startup options, specified as a list of options separated by spaces. For more
      information about startup options, see
      https://www.mathworks.com/help/matlab/matlab_env/commonly-used-startup-options.html.
    type: string
    default: ""

steps:
  - run:
      name: Run MATLAB tests
      environment:
        PARAM_TEST_RESULTS_JUNIT: <<parameters.test-results-junit>>
        PARAM_CODE_COVERAGE_COBERTURA: <<parameters.code-coverage-cobertura>>
        PARAM_CODE_COVERAGE_HTML: <<parameters.code-coverage-html>>
        PARAM_SOURCE_FOLDER: <<parameters.source-folder>>
        PARAM_SELECT_BY_FOLDER: <<parameters.select-by-folder>>
        PARAM_SELECT_BY_TAG: <<parameters.select-by-tag>>
        PARAM_MODEL_COVERAGE_COBERTURA: <<parameters.model-coverage-cobertura>>
        PARAM_MODEL_COVERAGE_HTML: <<parameters.model-coverage-html>>
        PARAM_TEST_RESULTS_SIMULINK_TEST: <<parameters.test-results-simulink-test>>
        PARAM_TEST_RESULTS_HTML: <<parameters.test-results-html>>
        PARAM_TEST_RESULTS_PDF: <<parameters.test-results-pdf>>
        PARAM_STRICT: <<parameters.strict>>
        PARAM_USE_PARALLEL: <<parameters.use-parallel>>
        PARAM_OUTPUT_DETAIL: <<parameters.output-detail>>
        PARAM_LOGGING_LEVEL: <<parameters.logging-level>>
        PARAM_STARTUP_OPTIONS: <<parameters.startup-options>>
      command: <<include(scripts/run-tests.sh)>>
      shell: bash
      no_output_timeout: <<parameters.no-output-timeout>>
