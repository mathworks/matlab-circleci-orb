description: >
  Execute a MATLAB script, function, or statement. MATLAB exits with exit code 0 if the specified
  script, function, or statement executes successfully without error. Otherwise, MATLAB terminates
  with a nonzero exit code, which causes the build to fail. You can use the assert or error
  functions in the command to ensure that builds fail when necessary. When you use this command,
  all of the required files must be on the MATLAB search path.

parameters:
  command:
    description: >
      Script, function, or statement to execute. If the value of command is the name of a MATLAB
      script or function, do not specify the file extension. If you specify more than one MATLAB
      command, use a comma or semicolon to separate the commands.
    type: string

steps:
  - run:
      name: Run MATLAB command
      command: |
        tmpdir=$(mktemp -d 2>/dev/null || mktemp -d -t 'run-command')

        # download run command shell scripts
        curl -sfLo "${tmpdir}/run-matlab-command.zip" https://ssd.mathworks.com/supportfiles/ci/run-matlab-command/v0/run-matlab-command.zip
        unzip -qod "${tmpdir}/bin" "${tmpdir}/run-matlab-command.zip"

        # form OS appropriate paths for MATLAB
        os=$(uname)
        workdir=$(pwd)
        scriptdir=$tmpdir
        if [[ $os = CYGWIN* || $os = MINGW* || $os = MSYS* ]]; then
          workdir=$(cygpath -w "$workdir")
          scriptdir=$(cygpath -w "$scriptdir")
        fi

        # create script to execute
        script=command_${RANDOM}
        scriptpath=${tmpdir}/${script}.m
        echo "cd('${workdir//\'/\'\'}');" > "$scriptpath"
        cat \<<'_EOF' >> "$scriptpath"
        <<parameters.command>>
        _EOF

        # run MATLAB command
        "${tmpdir}/bin/run_matlab_command.sh" "cd('${scriptdir//\'/\'\'}'); $script"
      shell: bash
